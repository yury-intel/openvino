name: Linux developer RISC-V workflow for CPU plugin (Ubuntu 22.04, Python 3.10)
on:
  workflow_dispatch:
  pull_request:
    paths:
      - '.github/workflows/dev_cpu_linux_riscv.yml'

concurrency:
  # github.ref is not unique in post-commit
  group: ${{ github.event_name == 'push' && github.run_id || github.ref }}-dev-cpu-linux-riscv
  cancel-in-progress: true

permissions: read-all

jobs:
  # copypaste form linux_riscv.yml until refactoring with reusable actions
  Smart_CI:
    runs-on: ubuntu-latest
    outputs:
      affected_components: "${{ steps.smart_ci.outputs.affected_components }}"
      changed_components: "${{ steps.smart_ci.outputs.changed_components }}"
      skip_workflow: "${{ steps.smart_ci.outputs.skip_workflow }}"
    steps:
      - name: checkout action
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          sparse-checkout: .github/actions/smart-ci

      - name: Get affected components
        id: smart_ci
        uses: ./.github/actions/smart-ci
        with:
          repository: ${{ github.repository }}
          pr: ${{ github.event.number }}
          commit_sha: ${{ github.sha }}
          ref_name: ${{ github.ref_name }}
          component_pattern: "category: (.*)"
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          skip_when_only_listed_labels_set: 'docs'
          skip_when_only_listed_files_changed: '*.md,*.rst,*.png,*.jpg,*.svg,*/layer_tests_summary/*,*/conformance/*'

  Docker:
    needs: Smart_CI
    runs-on: aks-linux-4-cores-16gb-docker-build
    container:
      image: openvinogithubactions.azurecr.io/docker_build:0.2
      volumes:
        - /mount:/mount
    outputs:
      images: "${{ steps.handle_docker.outputs.images }}"
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: ./.github/actions/handle_docker
        id: handle_docker
        with:
          images: |
            ov_build/ubuntu_22_04_riscv
          registry: 'openvinogithubactions.azurecr.io'
          dockerfiles_root_dir: '.github/dockerfiles'
          changed_components: ${{ needs.smart_ci.outputs.changed_components }}

  Build:
    needs: [Smart_CI, Docker]
    timeout-minutes: 150
    defaults:
      run:
        shell: bash
    runs-on: aks-linux-16-cores-32gb
    container:
      image: ${{ fromJSON(needs.docker.outputs.images).ov_build.ubuntu_22_04_riscv }}
      volumes:
        - /mount:/mount
    env:
      CMAKE_BUILD_TYPE: 'Release'
      CMAKE_GENERATOR: 'Ninja'
      CMAKE_CXX_COMPILER_LAUNCHER: ccache
      CMAKE_C_COMPILER_LAUNCHER: ccache
      OPENVINO_REPO: /__w/openvino/openvino/openvino
      BUILD_DIR: /__w/openvino/openvino/openvino_build
      INSTALL_DIR: /__w/openvino/openvino/openvino_install
      XUANTIE_DIR: /__w/openvino/xuantie
      SCCACHE_ERROR_LOG: /__w/openvino/sccache_log.txt
      # CONAN_USER_HOME: /mount/caches/ccache/ubuntu22_riscv64_master_release/.conan
      CCACHE_REMOTE_DIR: /mount/caches/ccache/ubuntu22_riscv64/${{ github.base_ref || github.ref_name }}
      CCACHE_DIR: /__w/openvino/openvino/ccache
      CCACHE_TEMPDIR: /__w/openvino/openvino/ccache_temp
      CCACHE_MAXSIZE: 2G

    if: ${{ !needs.smart_ci.outputs.skip_workflow && github.event_name != 'merge_group' }}
    steps:
      - name: Clone OpenVINO
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          path: ${{ env.OPENVINO_REPO }}
          submodules: 'true'

      #
      # Print system info
      #

      - name: System info
        uses: ./openvino/.github/actions/system_info

# remove ?
      - name: Setup ccache
        id: ccache_restore
        uses: ./openvino/.github/actions/cache
        with:
          save-always: ${{ github.event_name == 'push' && 'true' || 'false' }}
          cleanup-always: ${{ github.event_name == 'push' && 'true' || 'false' }}
          cache-size: 10
          max-cache-size: 50
          cache-path: ${{ env.CCACHE_REMOTE_DIR }}
          path: ${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-${{ runner.arch }}-ccache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-ccache

      # - name: Init submodules for non-Conan dependencies
      #   run: |
      #     pushd ${OPENVINO_REPO}
      #       git submodule update --init -- ${OPENVINO_REPO}/thirdparty/zlib
      #       git submodule update --init -- ${OPENVINO_REPO}/thirdparty/json
      #       git submodule update --init -- ${OPENVINO_REPO}/thirdparty/gtest
      #       git submodule update --init -- ${OPENVINO_REPO}/thirdparty/gflags
      #       git submodule update --init -- ${OPENVINO_REPO}/thirdparty/telemetry
      #       git submodule update --init -- ${OPENVINO_REPO}/src/plugins/intel_cpu
      #       git submodule update --init -- ${OPENVINO_REPO}/thirdparty/open_model_zoo
      #       git submodule update --init -- ${OPENVINO_REPO}/thirdparty/flatbuffers/flatbuffers
      #     popd

      - name: Init XUANTIE
        run: |
          mkdir ${XUANTIE_DIR}
          pushd ${XUANTIE_DIR}
            apt-get install gawk
            apt-get install sudo -y
            sudo apt-get install texinfo
            sudo apt-get install dos2unix
            sudo apt-get install wget
            sudo apt-get install bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev
            wget https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource//1663142514282/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1-20220906.tar.gz
            tar xf Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1-20220906.tar.gz
          popd

      - name: CMake configure - OpenVINO
        run: |
          cmake \
            -G "${{ env.CMAKE_GENERATOR }}" \
            -DENABLE_CPPLINT=OFF \
            -DENABLE_NCC_STYLE=OFF \
            -DENABLE_TESTS=ON \
            -DENABLE_INTEL_CPU=ON \
            -DENABLE_INTEL_GPU=OFF \
            -DENABLE_INTEL_NPU=OFF \
            -DENABLE_SAMPLES=ON \
            -DCMAKE_TOOLCHAIN_FILE=${OPENVINO_REPO}/cmake/toolchains/riscv64-071-thead-gnu.toolchain.cmake \
            -DRISCV_TOOLCHAIN_ROOT=${XUANTIE_DIR}/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.1 \
            -DENABLE_PYTHON=ON \
            -DENABLE_PYTHON_PACKAGING=ON \
            -DENABLE_WHEEL=ON \

            -DENABLE_STRICT_DEPENDENCIES=OFF \
            # -DENABLE_SYSTEM_OPENCL=ON \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DCPACK_GENERATOR=TGZ \
            -DCMAKE_COMPILE_WARNING_AS_ERROR=OFF \
            -DCMAKE_CXX_COMPILER_LAUNCHER=${{ env.CMAKE_CXX_COMPILER_LAUNCHER }} \
            -DCMAKE_C_COMPILER_LAUNCHER=${{ env.CMAKE_C_COMPILER_LAUNCHER }} \
            -S ${OPENVINO_REPO} \
            -B ${BUILD_DIR}

      - name: Clean sccache stats
        run: ${SCCACHE_PATH} --zero-stats

      - name: Cmake build - OpenVINO
        run: cmake --build ${BUILD_DIR} --parallel --config ${{ env.CMAKE_BUILD_TYPE }}

      - name: Show sccache stats
        run: ${SCCACHE_PATH} --show-stats

      - name: Cmake install - OpenVINO
        run: |
          cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} -P ${BUILD_DIR}/cmake_install.cmake
          cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_TEST_DIR} -DCOMPONENT=tests -P ${BUILD_DIR}/cmake_install.cmake
          cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} -DCOMPONENT=python_wheels -P ${BUILD_DIR}/cmake_install.cmake

      - name: Pack Artifacts
        run: |

          pushd ${INSTALL_DIR}
            tar -czvf ${BUILD_DIR}/openvino_package.tar.gz *
          popd

          pushd ${INSTALL_TEST_DIR}
            tar -czvf ${BUILD_DIR}/openvino_tests.tar.gz *
          popd

      #
      # Upload build artifacts and logs
      #
      - name: Upload build logs
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        if: always()
        with:
          name: build_logs
          path: ${{ env.SCCACHE_ERROR_LOG }}
          if-no-files-found: 'ignore'

      - name: Upload openvino package
        if: ${{ always() }}
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: openvino_package
          path: ${{ env.BUILD_DIR }}/openvino_package.tar.gz
          if-no-files-found: 'error'

      - name: Upload openvino tests package
        if: ${{ always() }}
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: openvino_tests
          path: ${{ env.BUILD_DIR }}/openvino_tests.tar.gz
          if-no-files-found: 'error'
    
      - name: Clean ccache
        run: ccache --cleanup

  Overall_Status:
    name: ci/gha_overall_status_linux_riscv
    needs: [Smart_CI, Build]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Check status of all jobs
        if: >-
          ${{
            contains(needs.*.result, 'failure') ||
            contains(needs.*.result, 'cancelled')
          }}
        run: exit 1
